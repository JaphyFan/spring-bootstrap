<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--为了使用springboot的默认插件设置，所以用父pom-->
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>3.0.1</version>
  </parent>

  <groupId>com.japhy.bootstrap</groupId>
  <artifactId>bootstrap-parent</artifactId>
  <version>${revision}${changelist}</version>
  <packaging>pom</packaging>

  <name>bootstrap-parent</name>
  <description>parent project for all others</description>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>manual</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Japhy</name>
      <email>japhy.fan@gamil.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/JaphyFan/spring-bootstrap.git</connection>
    <developerConnection>scm:git:https://github.com/JaphyFan/spring-bootstrap.git
    </developerConnection>
    <url>https://github.com/JaphyFan/spring-bootstrap</url>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>algorithm</module>
    <module>basic</module>
    <module>design-pattern</module>
    <module>jmeter</module>
    <module>springboot-config</module>
    <module>springboot-elasticsearch</module>
    <module>springboot-hateoas</module>
    <module>springboot-jpa</module>
    <module>springboot-kafka</module>
    <module>springboot-mongo</module>
    <module>springboot-redis</module>
    <module>springboot-servlet</module>
    <module>springboot-security</module>
    <module>springboot-rabbitmq</module>
    <module>structure</module>
    <module>web-base</module>
    <module>spring-source</module>
    <module>springcloud-bill</module>
    <module>springboot-sharding</module>
    <module>springcloud-bootstrap</module>
  </modules>

  <!--  配置依赖的版本-->
  <properties>
    <revision>0.0.3</revision>
    <changelist>-RELEASE</changelist>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.install.skip>true</maven.install.skip><!-- aggregator POMs not intended to be installed -->
    <maven.deploy.skip>true</maven.deploy.skip><!-- aggregator POMs not intended to be deployed -->
    <guava.version>31.1-jre</guava.version>
    <common.lang3.version>3.11</common.lang3.version>
    <docker.image.prefix>demo-japhy</docker.image.prefix>
    <gson.version>2.10</gson.version>
    <spring-cloud.version>2022.0.0</spring-cloud.version>
    <spring.boot.version>3.0.1</spring.boot.version>
    <checkstyle.config.location>codestyle/checkstyle.xml</checkstyle.config.location>
    <maven_checkstyle_version>3.1.1</maven_checkstyle_version>
    <argLine>-Xms256m -Xmx256m -Dfile.encoding=UTF-8
      -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=128m</argLine>
    <sonar.jacoco.reportPaths>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPaths>
    <surefireArgLine/>
    <testcontainers.version>1.15.3</testcontainers.version>
    <maven-pmd-plugin.version>3.17.0</maven-pmd-plugin.version>
    <p3c-pmd.version>2.1.1</p3c-pmd.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--since 3.0 swagger just need this dependency replace it with springdoc-->
      <!--<dependency>-->
      <!--  <groupId>io.springfox</groupId>-->
      <!--  <artifactId>springfox-boot-starter</artifactId>-->
      <!--  <version>3.0.0</version>-->
      <!--</dependency>-->

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>1.6.14</version>
      </dependency>

      <dependency>
        <groupId>com.github.kstyrc</groupId>
        <artifactId>embedded-redis</artifactId>
        <version>0.6</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>3.3.0</version>
        <scope>test</scope>
      </dependency>
      <!-- util -->
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt</artifactId>
        <version>0.9.1</version>
      </dependency>

      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>4.0.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-junit5</artifactId>
        <version>2.15.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>

    <!-- assertJ spring-boot-test-start 包含core   -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-db</artifactId>
      <version>2.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-guava</artifactId>
      <version>3.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-joda-time</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>

    <!--用于测试拼接数据-->
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <!-- Used for packaging LICENSE to each sub-module jar-->
    <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>../</directory>
        <targetPath>META-INF/</targetPath>
        <filtering>false</filtering>
        <includes>
          <include>LICENSE</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/application*.yml</include>
          <include>**/application*.yaml</include>
          <include>**/application*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/application*.yml</exclude>
          <exclude>**/application*.yaml</exclude>
          <exclude>**/application*.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <finalName>${project.artifactId}-${project.version}</finalName>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <index>true</index>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Specification-Version>${project.version}</Specification-Version>
                <Implementation-Version>${project.version}</Implementation-Version>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <!--          提供代码和javadoc的交叉浏览         -->
        <plugin>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- keep surefire and failsafe in sync -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M4</version>
          <inherited>true</inherited>
          <configuration>
            <useSystemClassLoader>true</useSystemClassLoader>
            <reportsDirectory>${project.basedir}/target/surefire-reports</reportsDirectory>
            <!--suppress UnresolvedMavenProperty -->
            <argLine>${argLine} ${surefireArgLine}</argLine>
            <testFailureIgnore>false</testFailureIgnore>
          </configuration>
        </plugin>

        <!-- performance tests -->
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <testResultsTimestamp>false</testResultsTimestamp>
            <propertiesUser>
              <host>localhost</host>
              <port>9000</port>
              <root>/</root>
            </propertiesUser>
          </configuration>
          <executions>
            <execution>
              <id>configuration</id>
              <goals>
                <goal>configure</goal>
              </goals>
            </execution>
            <!-- if activated, jmeter will run automatically on integration-test and verify goals -->
            <!--<execution>
                <phase>integration-test</phase>
                <goals>
                    <goal>configure</goal>
                    <goal>jmeter</goal>
                    <goal>results</goal>
                </goals>
            </execution>-->
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.alibaba.p3c</groupId>
            <artifactId>p3c-pmd</artifactId>
            <version>${p3c-pmd.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumPriority>1</minimumPriority>
          <printFailingErrors>true</printFailingErrors>
          <rulesets>
            <ruleset>rulesets/java/ali-comment.xml</ruleset>
            <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
            <ruleset>rulesets/java/ali-constant.xml</ruleset>
            <ruleset>rulesets/java/ali-exception.xml</ruleset>
            <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
            <ruleset>rulesets/java/ali-naming.xml</ruleset>
            <ruleset>rulesets/java/ali-oop.xml</ruleset>
            <ruleset>rulesets/java/ali-orm.xml</ruleset>
            <ruleset>rulesets/java/ali-other.xml</ruleset>
            <ruleset>rulesets/java/ali-set.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>4.0.0</version>
        <!-- *NOTE*: The default phase of revision is initialize, but in case you want to
                        change it, you can do so by adding the phase here -->
        <!--官网添加，但添加后会执行两次revision-->
        <!--<executions>-->
        <!--  <execution>-->
        <!--    <id>get-the-git-infos</id>-->
        <!--    <goals>-->
        <!--      <goal>revision</goal>-->
        <!--    </goals>-->
        <!--    <phase>initialize</phase>-->
        <!--  </execution>-->
        <!--</executions>-->
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
          </includeOnlyProperties>
          <commitIdGenerationMode>full</commitIdGenerationMode>
        </configuration>
      </plugin>

      <plugin>
        <!--注意springboot parent pom中的定义-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <configuration>
          <finalName>${project.build.finalName}</finalName>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
          <compilerArgument>-Xlint:deprecation</compilerArgument>
          <showWarnings>true</showWarnings>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <reportsDirectories>${basedir}/target/surefire-reports</reportsDirectories>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>aliyun-repos</id>
      <url>https://maven.aliyun.com/repository/public/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>aliyun-plugin</id>
      <url>https://maven.aliyun.com/repository/public/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>

    <!-- Enable JaCoCo Test. using idea show coverage data to open the exec file-->
    <profile>
      <id>test</id>
      <activation>
        <property>
          <name>active</name>
          <value>test</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-maven</artifactId>
            <version>2.10.0</version>
            <configuration>
              <reportVersion>2.15.0</reportVersion>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
            <version>1.1.0</version>
            <configuration>
              <updatePomFile>true</updatePomFile>
              <flattenMode>resolveCiFriendliesOnly</flattenMode>
            </configuration>
            <executions>
              <execution>
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>flatten</goal>
                </goals>
              </execution>
              <execution>
                <id>flatten.clean</id>
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jacoco</id>
      <activation>
        <property>
          <name>active</name>
          <value>test</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <classifier>runtime</classifier>
          <version>0.8.5</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.5</version>
            <executions>
              <execution>
                <id>pre-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <append>true</append>
                  <destFile>${sonar.jacoco.reportPaths}</destFile>
                  <propertyName>surefireArgLine</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>post-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${sonar.jacoco.reportPaths}</dataFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <dataFile>${sonar.jacoco.reportPaths}</dataFile>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>quality-check</id>
      <activation>
        <property>
          <name>active</name>
          <value>test</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven_checkstyle_version}</version>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>8.30</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>checkstyle-validation</id>
                <phase>validate</phase>
                <configuration>
                  <configLocation>${checkstyle.config.location}</configLocation>
                  <headerLocation>LICENSE</headerLocation>
                  <encoding>UTF-8</encoding>
                  <consoleOutput>true</consoleOutput>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>3.7.0.1746</version>
            <executions>
              <execution>
                <id>sonar</id>
                <phase>verify</phase>
                <goals>
                  <goal>sonar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- "release" profiles used for deploying with fabric8 -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <configuration>
              <skip>true</skip>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.2.0</version>
            <reportSets>
              <reportSet>
                <id>attach-javadocs</id>
                <reports>
                  <report>aggregate</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>3.0.0</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>index</report>
                  <report>summary</report>
                  <report>dependency-info</report>
                  <report>scm</report>
                  <report>plugin-management</report>
                  <report>team</report>
                  <report>ci-management</report>
                  <report>plugins</report>
                  <report>distribution-management</report>
                  <report>licenses</report>
                  <report>modules</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.0.0</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>3.0.0</version>
            <reportSets>
              <reportSet>
                <id>aggregate</id>
                <reports>
                  <report>aggregate</report>
                  <report>test-aggregate</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!--          maven docker plugin         -->
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.33.0</version>
            <extensions>true</extensions>
            <configuration>
              <showLogs>true</showLogs>
              <verbose>true</verbose>
            </configuration>
            <executions>
              <execution>
                <id>clean-docker</id>
                <phase>clean</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>remove</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
